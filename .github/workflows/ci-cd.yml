name: CI-CD

on:
  push:
    branches: [ develop, main ]
    tags: ['v*.*.*']
  pull_request:
    branches: [ develop, main ]

permissions:
  contents: read
  packages: write         # push vers GHCR privé
  security-events: write  # upload du rapport Trivy
  pages: write            # déploiement GitHub Pages
  id-token: write         # requis par actions/deploy-pages

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}   # owner/repo

jobs:
  ci:
    name: Lint + Tests + Build Angular
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Test (headless)
        run: |
          npm test -- --watch=false --browsers=ChromeHeadless --code-coverage || \
          echo "Tests non configurés - étape non bloquante"

      - name: Build prod (Pages)
        # Important: base href pour GitHub Pages = /CesiZen/
        run: npm run build -- --configuration=production --base-href "/CesiZen/"

      - name: Préparer 404.html pour SPA routing
        run: cp -f dist/index.html dist/404.html || true

      - name: Upload dist artifact (pour job Pages)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  docker:
    name: Build + Scan + Push image privée (GHCR)
    needs: [ci]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR (GITHUB_TOKEN)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
          labels: |
            org.opencontainers.image.source=${{ github.repository }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          format: 'sarif'
          output: 'trivy.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: Upload SARIF to Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

  pages:
    name: Deploy to GitHub Pages (main uniquement)
    needs: [ci, docker]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4

  preview:
    name: Preview Pages (develop)
    needs: [ci, docker]
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
      - name: Deploy preview
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: true
